{"version":3,"sources":["logger.js","api.js","constants.js","CodeMirror.js","Wysiwyg.js","App.js","serviceWorker.js","index.js"],"names":["logger","Pino","prettyPrint","level","wrapper","_len","arguments","length","data","Array","_key","apply","src_logger","info","bind","debug","trace","warn","error","fatal","config","baseURL","process","timeout","client","axios","create","api","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","options","resp","_args","wrap","_context","prev","next","undefined","objectSpread","sent","abrupt","t0","stop","this","CodeMirror","props","_props$value","value","_props$options","react_default","createElement","react_codemirror2","assign","Wysiwyg","editor","editorRef","React","createRef","prevProps","setData","window","CKEDITOR","Promise","resolve","reject","scriptjs","get","replace","current","toolbarGroups","name","groups","removeButtons","_this2","callback","on","evt","onChange","getData","setCkeditorRef","destroy","className","ref","Component","defaultProps","htmltojsxConverter","HTMLtoJSX","createClass","initState","modelRemote","model","parentId","title","mode","isLoadingAll","activeDocId","jsx","App","state","docs","previewRef","ckeditorRef","setState","url","method","clipboard","ClipboardJS","text","trigger","e","_this3","push","history","_this$state","css","_templateObject","es5","onCommand","_ref2","_callee2","id","doc","mostRecentDoc","_context2","find","filter","sort","b","createdAt","shift","getDocById","_x","menu","Menu","map","idx","Item","key","command","loading","disabled","onClick","_","_ref3","_callee3","_context3","innerHTML","_x2","cute","pretty","converted","convert","component","concat","App_StateHandler","_ref4","handleState","_ref5","_callee4","newTitle","_ref6","_ref7","_context4","isLoading","MessageBox","prompt","confirmButtonText","cancelButtonText","inputPattern","inputErrorMessage","trim","contents","_ref8","toConsumableArray","t1","_x3","type","isEqual","_ref9","Fragment","_templateObject2","placeholder","nativeType","test","icon","size","_ref10","_callee5","_context5","preventDefault","_x4","content","cx","_templateObject3","onDoubleClick","_ref11","fullscreen","docItem","active","_ref12","_callee6","_context6","_x5","moment","format","defineProperty","_templateObject4","src_Wysiwyg","src_CodeMirror","theme","lineNumbers","lineWrapping","readOnly","_ref14","_callee7","_ref13","_ref13$activeDocId","_ref13$doc","_ref13$setState","_ref13$handleState","_ref15","_context7","_x6","StateHandler","children","withRouter","Boolean","location","hostname","match","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"odAYMA,QAASC,GAAK,CAAEC,aAAa,IAEnCF,EAAOG,MAAQ,QASf,IAAMC,EAAU,SAAAD,GAAK,OAAI,WAAa,QAAAE,EAAAC,UAAAC,OAATC,EAAS,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAATF,EAASE,GAAAJ,UAAAI,GACpCV,EAAOG,GAAOQ,MAAMX,EAAQQ,KAGfI,EAAA,CACbC,KAAMb,EAAOa,KAAKC,KAAKd,GACvBe,MAAOf,EAAOe,MAAMD,KAAKd,GACzBgB,MAAOhB,EAAOgB,MAAMF,KAAKd,GACzBiB,KAAMjB,EAAOiB,KAAKH,KAAKd,GACvBkB,MAAOd,EAAQ,SACfe,MAAOf,EAAQ,UC7BXgB,EAAS,CACbC,QCLqBC,6DDMrBC,QAAS,KAGLC,EAASC,IAAMC,OAAON,GAkBbO,EAhBN,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA/B,UAAA,OAAAyB,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAON,EAAPE,EAAA9B,OAAA,QAAAmC,IAAAL,EAAA,GAAAA,EAAA,GAAiB,GAC3BrC,EAAOe,MAAM,iBAAbc,OAAAc,EAAA,EAAAd,CAAA,GAAoCT,EAAWe,IADrCI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIWjB,EAAOW,GAJlB,cAIFC,EAJEG,EAAAK,KAMR5C,EAAOe,MAAM,kBAAmBqB,GANxBG,EAAAM,OAAA,SAQDT,GARC,cAAAG,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAURvC,EAAOkB,MAAPqB,EAAAO,IAVQP,EAAAO,GAAA,yBAAAP,EAAAQ,SAAAb,EAAAc,KAAA,aAAH,yBAAApB,EAAAjB,MAAAqC,KAAA1C,YAAA,qFEYM2C,EAfI,SAAAC,GAAS,IAAAC,EAItBD,EAFFE,aAFwB,IAAAD,EAEhB,GAFgBA,EAAAE,EAItBH,EADFf,eAHwB,IAAAkB,EAGd,GAHcA,EAM1B,OACEC,EAAAtB,EAAAuB,cAACC,EAAA,aAAD3B,OAAA4B,OAAA,GACMP,EADN,CAEEE,MAAOA,EACPjB,QAASA,0CCdTuB,6MAOJC,OAAS,OAETC,UAAYC,IAAMC,8FAEEC,GACdf,KAAKW,QAAUI,EAAUvD,OAASwC,KAAKE,MAAM1C,MAC/CwC,KAAKW,OAAOK,QAAQhB,KAAKE,MAAM1C,iLAM1ByD,OAAOC,yCACJ,IAAIC,QAAQ,SAACC,EAASC,GAAV,OAAqBC,IAASC,IAC9C,wBACEH,EACAC,gBAIFJ,OAAOC,iCACTlB,KAAKW,OAASM,OAAOC,SAASM,QAAQxB,KAAKY,UAAUa,QAAS,CAC5DC,cAAe,CACb,CAAEC,KAAM,WAAYC,OAAQ,CAAE,OAAQ,WAAY,aAClD,CAAED,KAAM,UAAWC,OAAQ,CAAE,OAAQ,YAAa,eAAgB,YAClE,CAAED,KAAM,QAASC,OAAQ,CAAE,UAC3B,CAAED,KAAM,cAAeC,OAAQ,CAAE,cAAe,YAChD,CAAED,KAAM,SAAUC,OAAQ,CAAE,WAC5B,CAAED,KAAM,QAASC,OAAQ,CAAE,UAC3B,IACA,CAAED,KAAM,YAAaC,OAAQ,CAAE,OAAQ,cACvC,CAAED,KAAM,YAAaC,OAAQ,CAAE,OAAQ,SAAU,SAAU,QAAS,OAAQ,cAC5E,CAAED,KAAM,SAAUC,OAAQ,CAAE,WAC5B,CAAED,KAAM,SAAUC,OAAQ,CAAE,WAC5B,CAAED,KAAM,QAASC,OAAQ,CAAE,UAC3B,CAAED,KAAM,SAAUC,OAAQ,CAAE,WAC5B,CAAED,KAAM,QAASC,OAAQ,CAAE,WAE7BC,cAAe,yCAIX,IAAIV,QAAQ,SAAAC,GAAO,OAAIU,EAAKnB,OAAOK,QAAQc,EAAK5B,MAAM1C,KAAM,CAAEuE,SAAUX,aAE9EpB,KAAKW,OAAOqB,GAAG,SAAU,SAACC,GACxBH,EAAK5B,MAAMgC,SAASD,EAAItB,OAAOwB,aAGjCnC,KAAKE,MAAMkC,eAAepC,KAAKW,kEAGjC3D,EAAOkB,MAAPqB,EAAAO,2QAKEE,KAAKW,uCACDX,KAAKW,OAAO0B,6IAKpB,OACE/B,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAW,WACdhC,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAW,YAAaC,IAAKvC,KAAKY,oBAvEzBC,IAAM2B,WAAtB9B,EACG+B,aAAe,CACpBP,SAAU,aACV1E,KAAM,GACN4E,eAAgB,cAyEL1B,gnGC1Df,IAEMgC,EAAqB,IAAIC,IAAU,CACvCC,aAAa,IAGTC,EAAY,CAChBC,YAAa,GACbC,MAAO,GACPC,cAAUtD,EACVuD,WAAOvD,EACPwD,KAAM,OACNC,cAAc,EACdC,YAAa,GACbC,IAAK,IAGDC,8MACJC,qBACKV,GACHW,KAAM,OAiCRC,WAAa5C,IAAMC,cAEnB4C,YAAc,wNA/BZ1D,KAAK2D,SAAS,CAAER,cAAc,sBAGCxE,EAAI,CAC/BiF,IAAK,QACLC,OAAQ,wBAFIL,IAANhG,KAKRwC,KAAK2D,SAAS,CAAEH,KAAMA,oDAEtBxG,EAAOkB,MAAPqB,EAAAO,YAGFE,KAAK2D,SAAS,CAAER,cAAc,KAGxBW,EAAY,IAAIC,IAAY,mBAAoB,CACpDC,KAAM,SAAAC,GAAO,OAAInC,EAAKyB,MAAMF,QAGpBrB,GAAG,UAAW,SAAAkC,MAIxBJ,EAAU9B,GAAG,QAAS,SAAAkC,GACpBlH,EAAOkB,MAAMgG,iJAQP,IAAAC,EAAAnE,KAGKoE,EACTpE,KAAKE,MADPmE,QAAWD,KAHLE,EAgBJtE,KAAKuD,MATPP,EAPMsB,EAONtB,SACAC,EARMqB,EAQNrB,MACAO,EATMc,EASNd,KACAT,EAVMuB,EAUNvB,MACAD,EAXMwB,EAWNxB,YACAI,EAZMoB,EAYNpB,KACAC,EAbMmB,EAaNnB,aACAC,EAdMkB,EAcNlB,YACAC,EAfMiB,EAeNjB,IAGIM,EAAW3D,KAAK2D,SAAS7F,KAAKkC,MAE9ByD,EAAazD,KAAKyD,WAExB,OACEnD,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAWiC,YAAFC,IAhFA,0DAuMZlE,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAW,OACdhC,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAW,QAEdhC,EAAAtB,EAAAuB,cAACkE,EAAA,SAAD,CACEnC,UAAW,aACX2B,QAAS,QACTS,UAAS,eAAAC,EAAA9F,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAA2F,EAAMC,GAAN,IAAAC,EAAAC,EAAA,OAAAhG,EAAAC,EAAAM,KAAA,SAAA0F,GAAA,cAAAA,EAAAxF,KAAAwF,EAAAvF,MAAA,cACTkE,EAAS,CAAER,cAAc,IAEnB2B,EAAMtB,EAAKyB,KAAK,SAAAH,GAAG,OAAIA,EAAID,KAAOA,IAGlCE,EAAgBvB,EAAK0B,OAAO,SAAAJ,GAAG,OAAIA,EAAI9B,WAAa6B,GAAMC,EAAID,KAAOA,IACxEM,KAAK,SAACnG,EAAGoG,GAAJ,OAAWA,EAAEC,UAAYrG,EAAEqG,YAChCC,QARMN,EAAAxF,KAAA,EAAAwF,EAAAvF,KAAA,EAYD8F,GAAW,CACfnC,cACA0B,IAAKC,EACLpB,aAfK,OAAAqB,EAAAvF,KAAA,gBAAAuF,EAAAxF,KAAA,EAAAwF,EAAAlF,GAAAkF,EAAA,SAkBPhI,EAAOkB,MAAP8G,EAAAlF,IAlBO,QAqBT6D,EAAS,CACPX,SAAU8B,EAAID,GACd5B,MAAO6B,EAAI7B,MACXC,KAAM,OACNC,cAAc,IAzBP,yBAAA6B,EAAAjF,SAAA6E,EAAA5E,KAAA,YAAF,gBAAAwF,GAAA,OAAAb,EAAAhH,MAAAqC,KAAA1C,YAAA,GA4BTmI,KACEnF,EAAAtB,EAAAuB,cAACkE,EAAA,SAASiB,KAAV,KACGlC,EAAK0B,OAAO,SAAAJ,GAAG,QAAMA,EAAI7B,QACvBkC,KAAK,SAACnG,EAAGoG,GACR,OAAIpG,EAAEiE,MAAQmC,EAAEnC,OAAiB,EAC7BjE,EAAEiE,MAAQmC,EAAEnC,MAAgB,EACzB,IAER0C,IAAI,eAACb,EAADxH,UAAAC,OAAA,QAAAmC,IAAApC,UAAA,GAAAA,UAAA,GAAO,GAAIsI,EAAXtI,UAAAC,OAAA,EAAAD,UAAA,QAAAoC,EAAA,OACHY,EAAAtB,EAAAuB,cAACkE,EAAA,SAASoB,KAAV,CACEvD,UAAW,aACXwD,IAAKF,EACLG,QAASjB,EAAID,IACbC,EAAI7B,WAKd3C,EAAAtB,EAAAuB,cAACkE,EAAA,OAAD,CACEuB,QAAS7C,EACT8C,UAAWzC,EAAK0B,OAAO,SAAAJ,GAAG,QAAMA,EAAI7B,QAAO1F,QAE3C+C,EAAAtB,EAAAuB,cAAA,qBACSiD,EAAK0B,OAAO,SAAAJ,GAAG,QAAMA,EAAI7B,QAAO1F,OADzC,IAEE+C,EAAAtB,EAAAuB,cAAA,KAAG+B,UAAU,2CAKnBhC,EAAAtB,EAAAuB,cAACkE,EAAA,OAAD,CACEyB,QAAS,SAAAC,GAAC,OAAIxC,EAAS,CAAET,KAAM,UAC/B+C,SAAmB,SAAT/C,GAFZ,QAOA5C,EAAAtB,EAAAuB,cAACkE,EAAA,OAAD,CACEyB,QAAO,eAAAE,EAAAvH,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAAoH,EAAMF,GAAN,OAAApH,EAAAC,EAAAM,KAAA,SAAAgH,GAAA,cAAAA,EAAA9G,KAAA8G,EAAA7G,MAAA,cAAA6G,EAAA7G,KAAA,EACDkE,EAAS,CAAET,KAAM,YADhB,OAGPO,EAAWhC,QAAQ8E,UAAYxD,EAHxB,wBAAAuD,EAAAvG,SAAAsG,EAAArG,SAAF,gBAAAwG,GAAA,OAAAJ,EAAAzI,MAAAqC,KAAA1C,YAAA,GAKP2I,SAAmB,YAAT/C,GANZ,WAWA5C,EAAAtB,EAAAuB,cAACkE,EAAA,OAAD,CACEyB,QAAS,SAAAC,GACP,IAAMM,EAAOC,IAAO3D,GAEd4D,EAAYjE,EAAmBkE,QAAQH,GAEvCI,EAAS,8FAAAC,OAMzBH,EANyB,kDAYfhD,EAAS,CACPN,IAAKwD,EACL3D,KAAM,YAIV+C,SAAmB,WAAT/C,IAAsBH,GAxBlC,iBA8BAzC,EAAAtB,EAAAuB,cAACwG,GAAD,KACG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAa1D,EAAhByD,EAAgBzD,MAAhB,OACCjD,EAAAtB,EAAAuB,cAACkE,EAAA,OAAD,CACEyB,QAAO,eAAAgB,EAAArI,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAAkI,EAAMhB,GAAN,IAAAiB,EAAAC,EAAAjH,EAAAkH,EAAAxC,EAAA,OAAA/F,EAAAC,EAAAM,KAAA,SAAAiI,GAAA,cAAAA,EAAA/H,KAAA+H,EAAA9H,MAAA,UACPwH,EAAY,CAAEO,WAAW,IAIpBvE,EALE,CAAAsE,EAAA9H,KAAA,gBAAA8H,EAAA/H,KAAA,EAAA+H,EAAA9H,KAAA,EAOqBgI,aAAWC,OACjC,yCACA,YACA,CACEC,kBAAmB,KACnBC,iBAAkB,SAClBC,aAAc,KACdC,kBAAmB,kBAdpB,OAAAT,EAAAE,EAAA3H,KAOKQ,EAPLiH,EAOKjH,MAWRgH,EAAW,GAAAN,OAAG1G,GAAQ2H,OAEtBpE,EAAS,CAAEV,MAAOmE,IApBfG,EAAA9H,KAAA,wBAAA8H,EAAA/H,KAAA,GAAA+H,EAAAzH,GAAAyH,EAAA,SAsBHN,EAAY,CAAEO,WAAW,IAtBtBD,EAAA1H,OAAA,yBAAA0H,EAAA/H,KAAA,GAAA+H,EAAA9H,KAAA,GA6BuBd,EAAI,CAC9BiF,IAAK,QACLC,OAAQ,OACRrG,KAAM,CACJwF,SAAUA,EACVC,MAAOmE,EACPY,SAAUjF,KAnCT,QAAAuE,EAAAC,EAAA3H,KA6BSkF,EA7BTwC,EA6BG9J,KAURmG,EAAS,SAAAsE,GAAA,IAAGzE,EAAHyE,EAAGzE,KAAH,MAAe,CACtBV,YAAaC,EACbS,KAAI,GAAAsD,OAAAjI,OAAAqJ,EAAA,EAAArJ,CAAO2E,GAAP,CAAasB,IACjB1B,YAAa0B,EAAID,MAGd7B,GACHW,EAAS,CAAEX,SAAU8B,EAAID,KA9CtB0C,EAAA9H,KAAA,iBAAA8H,EAAA/H,KAAA,GAAA+H,EAAAY,GAAAZ,EAAA,UAiDLvK,EAAOkB,MAAPqJ,EAAAY,IAEAxE,EAAS,CAAEV,WAAOvD,IAnDb,QAsDPuH,EAAY,CAAEO,WAAW,IAtDlB,yBAAAD,EAAAxH,SAAAoH,EAAAnH,KAAA,qBAAF,gBAAAoI,GAAA,OAAAlB,EAAAvJ,MAAAqC,KAAA1C,YAAA,GAyDP0I,QAASzC,EAAMiE,UACfa,KAAM,UACNpC,SAAUqC,IAAQvF,EAAOD,IAA0B,KAAVC,GA5D3C,WAqENzC,EAAAtB,EAAAuB,cAACwG,GAAD,KACG,SAAAwB,GAAA,IAAGtB,EAAHsB,EAAGtB,YAAa1D,EAAhBgF,EAAgBhF,MAAhB,OACCjD,EAAAtB,EAAAuB,cAAAD,EAAAtB,EAAAwJ,SAAA,KACkB,SAAfjF,EAAML,MACP5C,EAAAtB,EAAAuB,cAAA,QAAM+B,UAAWiC,YAAFkE,MAIbnI,EAAAtB,EAAAuB,cAACkE,EAAA,MAAD,CACEiE,YAAa,gBACbtI,MAAOmD,EAAMN,MACbf,SAAU,SAAA9B,GAAK,OAAI6G,EAAY,CAAEhE,MAAO7C,OAE1CE,EAAAtB,EAAAuB,cAACkE,EAAA,OAAD,CACEkE,WAAY,SACZ1C,UAAW,KAAK2C,KAAKrF,EAAMN,QAAUM,EAAMN,QAAUA,EACrD4F,KAAM,eACNR,KAAM,UACNrC,QAASzC,EAAMiE,UACfsB,KAAM,QACN5C,QAAO,eAAA6C,EAAAlK,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAA+J,EAAM9E,GAAN,OAAAnF,EAAAC,EAAAM,KAAA,SAAA2J,GAAA,cAAAA,EAAAzJ,KAAAyJ,EAAAxJ,MAAA,cACPyE,EAAEgF,iBAEFjC,EAAY,CAAEO,WAAW,IAHlByB,EAAAzJ,KAAA,EAAAyJ,EAAAxJ,KAAA,EAMCd,EAAI,CACRiF,IAAG,SAAAkD,OAAW9D,GACda,OAAQ,MACRrG,KAAM,CACJqH,GAAI7B,EACJC,MAAOM,EAAMN,SAXZ,OAeLU,EAAS,CACPV,MAAOM,EAAMN,MACbO,KAAI,GAAAsD,OAAAjI,OAAAqJ,EAAA,EAAArJ,CACC2E,EAAK0B,OAAO,SAAAJ,GAAG,OAAIA,EAAID,KAAO7B,KAD/B,CAAAnE,OAAAc,EAAA,EAAAd,CAAA,GAGG2E,EAAKyB,KAAK,SAAAH,GAAG,OAAIA,EAAID,KAAO7B,IAH/B,CAIAC,MAAOM,EAAMN,YArBdgG,EAAAxJ,KAAA,gBAAAwJ,EAAAzJ,KAAA,EAAAyJ,EAAAnJ,GAAAmJ,EAAA,SA0BLjM,EAAOkB,MAAP+K,EAAAnJ,IA1BK,QA6BPmH,EAAY,CACV/D,UAAMxD,EACN8H,WAAW,IA/BN,yBAAAyB,EAAAlJ,SAAAiJ,EAAAhJ,KAAA,YAAF,gBAAAmJ,GAAA,OAAAJ,EAAApL,MAAAqC,KAAA1C,YAAA,IAPT,QA0CAgD,EAAAtB,EAAAuB,cAACkE,EAAA,OAAD,CACEqE,KAAM,QACN5C,QAAS,SAAAC,GAAC,OAAIc,EAAY,CAAE/D,UAAMxD,KAClCmJ,KAAM,gBAHR,YAQAtF,EAAML,MACR5C,EAAAtB,EAAAuB,cAACkE,EAAA,QAAD,CAAS2E,QAAS,wBAChB9I,EAAAtB,EAAAuB,cAAA,OACE+B,UAAW+G,YAAG,WAAY9E,YAAb+E,MACbC,cAAe,SAAApD,GAAC,OAAIc,EAAY,CAAE/D,KAAM,OAAQD,MAAOA,MAEtDA,GAAK,UAAA6D,OAAc7D,QAQ9B3C,EAAAtB,EAAAuB,cAACkE,EAAA,OAAD,CACE4D,KAAM,UACNnC,QAAS,SAAAC,GACPhC,EAAKT,YAAY1C,UAEjB2C,EAAS9E,OAAAc,EAAA,EAAAd,CAAA,GACJgE,IAGLuB,EAAK,OATT,wBAiBF9D,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAW,YAGdhC,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAW,YACdhC,EAAAtB,EAAAuB,cAACwG,GAAD,KACG,SAAAyC,GAAA,IAAGvC,EAAHuC,EAAGvC,YAAa1D,EAAhBiG,EAAgBjG,MAAhB,OACCjD,EAAAtB,EAAAuB,cAACD,EAAAtB,EAAMwJ,SAAP,KACGjF,EAAMiE,WAAalH,EAAAtB,EAAAuB,cAACkE,EAAA,QAAD,CAASgF,YAAU,KAErCzG,GACA1C,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAW,WAAhB,4BAGDU,GACC1C,EAAAtB,EAAAuB,cAACD,EAAAtB,EAAMwJ,SAAP,KAGGhF,EAAK0B,OAAO,SAAAJ,GAAG,OAAIA,EAAI9B,WAAaA,GAAY8B,EAAID,KAAO7B,IACzDmC,KAAK,SAACnG,EAAGoG,GAAJ,OAAWA,EAAEC,UAAYrG,EAAEqG,YAChCM,IAAI,SAACb,EAAKc,GAAN,OACHtF,EAAAtB,EAAAuB,cAAA,OACE+B,UAAW+G,YAAG,CACZK,SAAS,EACTC,OAAQvG,IAAgB0B,EAAID,KAE9BiB,IAAKF,EACLM,QAAO,eAAA0D,EAAA/K,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAA4K,EAAM1D,GAAN,OAAApH,EAAAC,EAAAM,KAAA,SAAAwK,GAAA,cAAAA,EAAAtK,KAAAsK,EAAArK,MAAA,cAAAqK,EAAArK,KAAA,EACD8F,GAAW,CACfnC,cACA0B,MACAnB,WACAsD,gBALK,OAQPtD,EAAS,CAAET,KAAM,SARV,wBAAA4G,EAAA/J,SAAA8J,EAAA7J,SAAF,gBAAA+J,GAAA,OAAAH,EAAAjM,MAAAqC,KAAA1C,YAAA,IAWPgD,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAW,OAAhB,uBACAhC,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAW,OAAQ0H,IAAOlF,EAAIO,WAAW4E,OAAO,sCAavE3J,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAW,cAGdhC,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAW+G,YAAG,OAADxK,OAAAqL,EAAA,EAAArL,CAAA,GACf0F,YADe4F,KACgB,SAATjH,KAEvB5C,EAAAtB,EAAAuB,cAAC6J,EAAD,CACEhI,eAAgB,SAAAG,GAAS4B,EAAKT,YAAcnB,GAC5C/E,KAAMsF,EACNZ,SAAU,SAAA1E,GAAI,OAAImG,EAAS,CAAEZ,MAAOvF,QAK9B,YAAT0F,GACC5C,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAW,WACdhC,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAW,OAAQC,IAAKkB,KAKvB,WAATP,GACD5C,EAAAtB,EAAAuB,cAAA,OAAK+B,UAAW,UACdhC,EAAAtB,EAAAuB,cAAA,UACE+B,UAAW,gDADb,qBAMAhC,EAAAtB,EAAAuB,cAAC8J,EAAD,CACEjK,MAAOiD,EACPlE,QAAS,CACP+D,KAAM,aACNoH,MAAO,WACPC,aAAa,EACbC,cAAc,EACdC,UAAU,gBAjiBV5J,IAAM2B,WAgjBlB+C,GAAU,eAAAmF,EAAA7L,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA0L,EAAAC,GAAA,IAAAC,EAAAzH,EAAA0H,EAAAhG,EAAAiG,EAAApH,EAAAqH,EAAA/D,EAAAgE,EAAAzN,EAAA,OAAAuB,EAAAC,EAAAM,KAAA,SAAA4L,GAAA,cAAAA,EAAA1L,KAAA0L,EAAAzL,MAAA,UAAAoL,EAAAD,EACjBxH,mBADiB,IAAAyH,EACH,GADGA,EAAAC,EAAAF,EAEjB9F,WAFiB,IAAAgG,EAEX,GAFWA,EAAAC,EAAAH,EAGjBjH,gBAHiB,IAAAoH,EAGN,aAHMA,EAAAC,EAAAJ,EAIjB3D,mBAJiB,IAAA+D,EAIH,aAJGA,GAMb5H,GAAeA,IAAgB0B,EAAID,GANtB,CAAAqG,EAAAzL,KAAA,eAAAyL,EAAArL,OAAA,wBAUjBoH,EAAY,CAAEO,WAAW,IAVR0D,EAAA1L,KAAA,EAAA0L,EAAAzL,KAAA,EAaQd,EAAI,CACzBiF,IAAG,SAAAkD,OAAWhC,EAAID,IAClBhB,OAAQ,QAfK,OAAAoH,EAAAC,EAAAtL,KAaPpC,EAbOyN,EAaPzN,KAKRmG,EAAS,CACPZ,MAAOvF,EAAKwK,SACZlF,YAAatF,EAAKwK,SAClB5E,YAAa0B,EAAID,KArBJqG,EAAAzL,KAAA,iBAAAyL,EAAA1L,KAAA,GAAA0L,EAAApL,GAAAoL,EAAA,SAwBflO,EAAOkB,MAAPgN,EAAApL,IAxBe,QA2BjBmH,EAAY,CAAEO,WAAW,IA3BR,yBAAA0D,EAAAnL,SAAA4K,EAAA3K,KAAA,aAAH,gBAAAmL,GAAA,OAAAT,EAAA/M,MAAAqC,KAAA1C,YAAA,GA8BV8N,8MACJ7H,MAAQ,2EAGN,OAAOvD,KAAKE,MAAMmL,SAAS,CACzBpE,YAAajH,KAAK2D,SAAS7F,KAAKkC,MAChCuD,MAAOvD,KAAKuD,eANS1C,IAAM2B,WAWlB8I,OAAWhI,ICrnBNiI,QACW,cAA7BtK,OAAOuK,SAASC,UAEe,UAA7BxK,OAAOuK,SAASC,UAEhBxK,OAAOuK,SAASC,SAASC,MACvB,yECXNC,IAASC,OACPtL,EAAAtB,EAAAuB,cAACsL,GAAA,EAAD,KACEvL,EAAAtB,EAAAuB,cAACuL,GAAD,OAEAC,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.dc72a262.chunk.js","sourcesContent":["import Pino from 'pino'\n\n// LEVELS\n\n// 'silent'\n// 'fatal'\n// 'error'\n// 'warn'\n// 'info'\n// 'debug'\n// 'trace'\n\nconst logger = Pino({ prettyPrint: true })\n\nlogger.level = 'trace'\n\n// USAGE EXAMPLE:\n\n// logger.debug('comment', obj, array, ...)\n// logger.error(...)\n// logger.fatal(...)\n// logger.info(...)\n\nconst wrapper = level => (...data) => {\n  logger[level].apply(logger, data)\n}\n\nexport default {\n  info: logger.info.bind(logger),\n  debug: logger.debug.bind(logger),\n  trace: logger.trace.bind(logger),\n  warn: logger.warn.bind(logger),\n  error: wrapper('error'),\n  fatal: wrapper('fatal')\n}\n","import axios from 'axios'\nimport logger from './logger'\nimport { API_URL } from './constants'\n\nconst config = {\n  baseURL: API_URL,\n  timeout: 4000\n}\n\nconst client = axios.create(config)\n\nconst api = async (options = {}) => {\n  logger.debug('API REQUEST =>', { ...config, ...options })\n\n  try {\n    const resp = await client(options)\n\n    logger.debug('API RESPONSE =>', resp)\n\n    return resp\n  } catch (error) {\n    logger.error(error)\n\n    throw error\n  }\n}\n\nexport default api\n","export const API_URL = process.env.REACT_APP_API_URL\n","import React from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/theme/neat.css'\nimport 'codemirror/mode/xml/xml.js'\nimport 'codemirror/mode/javascript/javascript.js'\nimport { UnControlled } from 'react-codemirror2'\n\nconst CodeMirror = props => {\n  const {\n    value = '',\n    options = {}\n  } = props\n\n  return (\n    <UnControlled\n      {...props}\n      value={value}\n      options={options}\n    />\n  )\n}\n\nexport default CodeMirror\n","import React from 'react'\nimport logger from './logger'\nimport scriptjs from 'scriptjs'\n\nclass Wysiwyg extends React.Component {\n  static defaultProps = {\n    onChange: () => {},\n    data: '',\n    setCkeditorRef: () => {}\n  }\n\n  editor = null\n\n  editorRef = React.createRef()\n\n  componentDidUpdate (prevProps) {\n    if (this.editor && prevProps.data !== this.props.data) {\n      this.editor.setData(this.props.data)\n    }\n  }\n\n  async componentDidMount () {\n    try {\n      if (!window.CKEDITOR) {\n        await new Promise((resolve, reject) => scriptjs.get(\n          '/ckeditor/ckeditor.js'\n          , resolve\n          , reject\n        ))\n      }\n\n      if (window.CKEDITOR) {\n        this.editor = window.CKEDITOR.replace(this.editorRef.current, {\n          toolbarGroups: [\n            { name: 'document', groups: [ 'mode', 'document', 'doctools' ] },\n            { name: 'editing', groups: [ 'find', 'selection', 'spellchecker', 'editing' ] },\n            { name: 'forms', groups: [ 'forms' ] },\n            { name: 'basicstyles', groups: [ 'basicstyles', 'cleanup' ] },\n            { name: 'insert', groups: [ 'insert' ] },\n            { name: 'links', groups: [ 'links' ] },\n            '/',\n            { name: 'clipboard', groups: [ 'undo', 'clipboard' ] },\n            { name: 'paragraph', groups: [ 'list', 'indent', 'blocks', 'align', 'bidi', 'paragraph' ] },\n            { name: 'styles', groups: [ 'styles' ] },\n            { name: 'colors', groups: [ 'colors' ] },\n            { name: 'tools', groups: [ 'tools' ] },\n            { name: 'others', groups: [ 'others' ] },\n            { name: 'about', groups: [ 'about' ] }\n          ],\n          removeButtons: 'Cut,Copy,Paste,Internallink'\n        })\n\n        // pre fill if needed\n        await new Promise(resolve => this.editor.setData(this.props.data, { callback: resolve }))\n\n        this.editor.on('change', (evt) => {\n          this.props.onChange(evt.editor.getData())\n        })\n\n        this.props.setCkeditorRef(this.editor)\n      }\n    } catch (error) {\n      logger.error(error)\n    }\n  }\n\n  async componentWillUnmount () {\n    if (this.editor) {\n      await this.editor.destroy()\n    }\n  }\n\n  render () {\n    return (\n      <div className={'wysiwyg'}>\n        <div className={'ckeditor4'} ref={this.editorRef} />\n      </div>\n    )\n  }\n}\n\nexport default Wysiwyg\n","import React from 'react'\nimport 'element-theme-default'\nimport {\n  Button,\n  Dropdown,\n  MessageBox,\n  Loading,\n  Input,\n  Tooltip\n} from 'element-react'\nimport withRouter from 'react-router-dom/withRouter'\nimport { css, cx } from 'emotion'\nimport isEqual from 'lodash.isequal'\nimport api from './api'\nimport logger from './logger'\nimport moment from 'moment'\nimport HTMLtoJSX from 'htmltojsx'\nimport CodeMirror from './CodeMirror'\nimport ClipboardJS from 'clipboard'\nimport Wysiwyg from './Wysiwyg'\n// import CKEditor from 'ckeditor4-react'\nimport pretty from 'pretty'\n\nconst PAGE_OFFSET = '50px'\n\nconst htmltojsxConverter = new HTMLtoJSX({\n  createClass: false\n})\n\nconst initState = {\n  modelRemote: '',\n  model: '',\n  parentId: undefined,\n  title: undefined,\n  mode: 'edit',\n  isLoadingAll: false,\n  activeDocId: '',\n  jsx: ''\n}\n\nclass App extends React.Component {\n  state = {\n    ...initState,\n    docs: []\n  }\n\n  async componentDidMount () {\n    this.setState({ isLoadingAll: true })\n\n    try {\n      const { data: docs } = await api({\n        url: '/docs',\n        method: 'GET'\n      })\n\n      this.setState({ docs: docs })\n    } catch (error) {\n      logger.error(error)\n    }\n\n    this.setState({ isLoadingAll: false })\n\n    // clipboard\n    const clipboard = new ClipboardJS('.clipboardButton', {\n      text: trigger => this.state.jsx\n    })\n\n    clipboard.on('success', e => {\n      // logger.debug(e)\n    })\n\n    clipboard.on('error', e => {\n      logger.error(e)\n    })\n  }\n\n  previewRef = React.createRef()\n\n  ckeditorRef = null\n\n  render () {\n    const {\n      // location: { pathname },\n      history: { push }\n    } = this.props\n\n    const {\n      parentId,\n      title,\n      docs,\n      model,\n      modelRemote,\n      mode,\n      isLoadingAll,\n      activeDocId,\n      jsx\n    } = this.state\n\n    const setState = this.setState.bind(this)\n\n    const previewRef = this.previewRef\n\n    return (\n      <div className={css`\n        padding-top: ${PAGE_OFFSET};\n\n        .nav {\n          z-index: 999;\n          display: flex;\n          justify-content: space-between;\n          height: ${PAGE_OFFSET};\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          background: #ffffff;\n          align-items: center;\n          padding: 0 .5rem;\n\n          > div {\n            display: flex;\n          }\n\n          .docsButton {\n            margin-right: 10px;\n\n            ul {\n              white-space: nowrap;\n            }\n          }\n\n          .feedback {\n            font-weight: lighter;\n          }\n\n          button {\n            font-weight: bold;\n          }\n        }\n\n        \n        .mainArea {\n          \n          .docsList {\n            width: 200px;\n            top: ${PAGE_OFFSET};\n            left: 0;\n            position: fixed;\n            height: calc(100vh - ${PAGE_OFFSET});\n            box-sizing: border-box;\n            background-color: #F9FAFC;\n            overflow: auto;\n            z-index: 1;\n\n            .docItem {\n              padding: .5rem;\n              font-weight: lighter;\n              font-size: 13.5px;\n              border-bottom: 1px solid #D3DCE6;\n              cursor: pointer;\n\n              &.active {\n                background-color: #1D8CE0;\n                color: #ffffff;\n              }\n            }\n\n          }\n          \n          .editorArea {\n            flex-grow: 1;\n            margin-left: 200px;\n\n            .cke_inner.cke_reset {\n              div[id$=\"_contents\"] {\n                height: calc(100vh - ${PAGE_OFFSET} - 77px) !important;\n              }\n            }\n            \n            .wysiwyg {\n              height: calc(100vh - ${PAGE_OFFSET});\n              background: #EFEFEF;\n\n              > div {\n                max-width: 800px;\n                margin: auto;\n              }\n            }\n            \n            .preview {\n              height: calc(100vh - ${PAGE_OFFSET});\n              box-sizing: border-box;\n              background: #EFEFEF;\n              padding: 2rem 2rem;\n              \n              .html {\n                background: #ffffff;\n                min-height: 100%;\n                padding: 1cm 2cm;\n                box-sizing: border-box;\n                max-width: 800px;\n                margin: auto;\n              }\n            }\n\n            .export {\n              position: relative;\n\n              .CodeMirror {\n                height: calc(100vh - ${PAGE_OFFSET});\n              }\n\n              .clipboardButton {\n                position: absolute;\n                top: 5px;\n                right: 5px;\n                z-index: 3;\n              }\n            }\n          }\n        }\n      `}>\n        <div className={'nav'}>\n          <div className={'left'}>\n\n            <Dropdown\n              className={'docsButton'}\n              trigger={'click'}\n              onCommand={async id => {\n                setState({ isLoadingAll: true })\n\n                const doc = docs.find(doc => doc.id === id)\n\n                // find most recent doc\n                const mostRecentDoc = docs.filter(doc => doc.parentId === id || doc.id === id)\n                  .sort((a, b) => +b.createdAt - a.createdAt)\n                  .shift()\n\n                try {\n                  // get it\n                  await getDocById({\n                    activeDocId,\n                    doc: mostRecentDoc,\n                    setState\n                  })\n                } catch (error) {\n                  logger.error(error)\n                }\n\n                setState({\n                  parentId: doc.id,\n                  title: doc.title,\n                  mode: 'edit',\n                  isLoadingAll: false\n                })\n              }}\n              menu={\n                <Dropdown.Menu>\n                  {docs.filter(doc => !!doc.title)\n                    .sort((a, b) => {\n                      if (a.title < b.title) { return -1 }\n                      if (a.title > b.title) { return 1 }\n                      return 0\n                    })\n                    .map((doc = {}, idx) => (\n                      <Dropdown.Item\n                        className={'menuOption'}\n                        key={idx}\n                        command={doc.id}\n                      >{doc.title}</Dropdown.Item>\n                    ))}\n                </Dropdown.Menu>\n              }\n            >\n              <Button\n                loading={isLoadingAll}\n                disabled={!docs.filter(doc => !!doc.title).length}\n              >\n                <span>\n                  DOCS ({docs.filter(doc => !!doc.title).length})\n                  <i className='el-icon-caret-bottom el-icon--right' />\n                </span>\n              </Button>\n            </Dropdown>\n\n            <Button\n              onClick={_ => setState({ mode: 'edit' })}\n              disabled={mode === 'edit'}\n            >\n              EDIT\n            </Button>\n\n            <Button\n              onClick={async _ => {\n                await setState({ mode: 'preview' })\n\n                previewRef.current.innerHTML = model\n              }}\n              disabled={mode === 'preview'}\n            >\n              PREVIEW\n            </Button>\n\n            <Button\n              onClick={_ => {\n                const cute = pretty(model)\n\n                const converted = htmltojsxConverter.convert(cute)\n\n                const component = `\nimport React from 'react'\n\nconst ExportedComponent = props => {\n  return (\n    \n    ${converted}\n  )\n}\n\nexport default ExportedComponent\n`\n                setState({\n                  jsx: component,\n                  mode: 'export'\n                })\n              }\n              }\n              disabled={mode === 'export' || !model}\n            >\n              EXPORT to JSX\n            </Button>\n\n            {/* CREATE DOC */}\n            <StateHandler>\n              {({ handleState, state }) =>\n                <Button\n                  onClick={async _ => {\n                    handleState({ isLoading: true })\n\n                    let newTitle\n\n                    if (!title) {\n                      try {\n                        const { value } = await MessageBox.prompt(\n                          'Please enter a Title for this document',\n                          'Set Title',\n                          {\n                            confirmButtonText: 'OK',\n                            cancelButtonText: 'Cancel',\n                            inputPattern: /\\w/,\n                            inputErrorMessage: 'Invalid Title'\n                          }\n                        )\n\n                        newTitle = `${value}`.trim()\n\n                        setState({ title: newTitle })\n                      } catch (error) {\n                        handleState({ isLoading: false })\n\n                        return\n                      }\n                    }\n\n                    try {\n                      const { data: doc } = await api({\n                        url: '/docs',\n                        method: 'POST',\n                        data: {\n                          parentId: parentId,\n                          title: newTitle,\n                          contents: model\n                        }\n                      })\n\n                      setState(({ docs }) => ({\n                        modelRemote: model,\n                        docs: [ ...docs, doc ],\n                        activeDocId: doc.id\n                      }))\n\n                      if (!parentId) {\n                        setState({ parentId: doc.id })\n                      }\n                    } catch (error) {\n                      logger.error(error)\n\n                      setState({ title: undefined })\n                    }\n\n                    handleState({ isLoading: false })\n                  }}\n\n                  loading={state.isLoading}\n                  type={'primary'}\n                  disabled={isEqual(model, modelRemote) || model === ''}\n                >\n                  SAVE\n                </Button>\n              }\n            </StateHandler>\n\n          </div>\n\n          <StateHandler>\n            {({ handleState, state }) =>\n              <>\n                {state.mode === 'edit' &&\n                <form className={css`\n                  display: flex; \n                  align-items: center;\n                `}>\n                  <Input\n                    placeholder={'enter a title'}\n                    value={state.title}\n                    onChange={value => handleState({ title: value })}\n                  />\n                  <Button\n                    nativeType={'submit'}\n                    disabled={!/\\w/.test(state.title) || state.title === title}\n                    icon={'circle-check'}\n                    type={'primary'}\n                    loading={state.isLoading}\n                    size={'small'}\n                    onClick={async e => {\n                      e.preventDefault()\n\n                      handleState({ isLoading: true })\n\n                      try {\n                        await api({\n                          url: `/docs/${parentId}`,\n                          method: 'PUT',\n                          data: {\n                            id: parentId,\n                            title: state.title\n                          }\n                        })\n\n                        setState({\n                          title: state.title,\n                          docs: [\n                            ...docs.filter(doc => doc.id !== parentId),\n                            {\n                              ...docs.find(doc => doc.id === parentId),\n                              title: state.title\n                            }\n                          ]\n                        })\n                      } catch (error) {\n                        logger.error(error)\n                      }\n\n                      handleState({\n                        mode: undefined,\n                        isLoading: false\n                      })\n                    }}\n                  >SAVE</Button>\n                  <Button\n                    size={'small'}\n                    onClick={_ => handleState({ mode: undefined })}\n                    icon={'circle-close'}\n                  >CANCEL</Button>\n                </form>\n                }\n\n                {!state.mode &&\n                <Tooltip content={'double click to edit'}>\n                  <div\n                    className={cx('feedback', css`cursor: pointer;`)}\n                    onDoubleClick={_ => handleState({ mode: 'edit', title: title })}\n                  >\n                    {title && `Title: ${title}`}\n                  </div>\n                </Tooltip>\n                }\n              </>\n            }\n          </StateHandler>\n\n          <Button\n            type={'warning'}\n            onClick={_ => {\n              this.ckeditorRef.setData()\n\n              setState({\n                ...initState\n              })\n\n              push('/')\n            }}\n          >\n            CREATE NEW DOCUMENT\n          </Button>\n\n        </div>\n\n        <div className={'mainArea'}>\n\n          {/* LIST OF VERSIONS */}\n          <div className={'docsList'}>\n            <StateHandler>\n              {({ handleState, state }) =>\n                <React.Fragment>\n                  {state.isLoading && <Loading fullscreen />}\n\n                  {!parentId &&\n                    <div className={'docItem'}>Select a doc from \"DOCS\"</div>\n                  }\n\n                  {parentId &&\n                    <React.Fragment>\n\n                      {/* GET A DOC */}\n                      {docs.filter(doc => doc.parentId === parentId || doc.id === parentId)\n                        .sort((a, b) => +b.createdAt - a.createdAt)\n                        .map((doc, idx) => (\n                          <div\n                            className={cx({\n                              docItem: true,\n                              active: activeDocId === doc.id\n                            })}\n                            key={idx}\n                            onClick={async _ => {\n                              await getDocById({\n                                activeDocId,\n                                doc,\n                                setState,\n                                handleState\n                              })\n\n                              setState({ mode: 'edit' })\n                            }}\n                          >\n                            <div className={'row'}>Revision created on</div>\n                            <div className={'row'}>{moment(doc.createdAt).format('MM/DD/YYYY hh:mm:ss:SSS a')}</div>\n                          </div>\n                        ))\n                      }\n\n                    </React.Fragment>\n                  }\n                </React.Fragment>\n              }\n            </StateHandler>\n          </div>\n\n          {/* EDITOR AREA */}\n          <div className={'editorArea'}>\n\n            {/* EDITOR */}\n            <div className={cx('edit', {\n              [css`display: none;`]: mode !== 'edit'\n            })}>\n              <Wysiwyg\n                setCkeditorRef={ref => { this.ckeditorRef = ref }}\n                data={modelRemote}\n                onChange={data => setState({ model: data })}\n              />\n            </div>\n\n            {/* PREVIEW */}\n            {mode === 'preview' &&\n              <div className={'preview'}>\n                <div className={'html'} ref={previewRef} />\n              </div>\n            }\n\n            {/* EXPORT TO JSX */}\n            {mode === 'export' &&\n            <div className={'export'}>\n              <button\n                className={'el-button clipboardButton el-button--success'}\n              >\n                COPY TO CLIPBOARD\n              </button>\n\n              <CodeMirror\n                value={jsx}\n                options={{\n                  mode: 'javascript',\n                  theme: 'material',\n                  lineNumbers: true,\n                  lineWrapping: true,\n                  readOnly: true\n                }}\n              />\n            </div>\n            }\n\n          </div>\n\n        </div>\n\n      </div>\n    )\n  }\n}\n\nconst getDocById = async ({\n  activeDocId = '',\n  doc = {},\n  setState = () => {},\n  handleState = () => {}\n}) => {\n  if (activeDocId && activeDocId === doc.id) {\n    return\n  }\n\n  handleState({ isLoading: true })\n\n  try {\n    const { data } = await api({\n      url: `/docs/${doc.id}`,\n      method: 'GET'\n    })\n\n    setState({\n      model: data.contents,\n      modelRemote: data.contents,\n      activeDocId: doc.id\n    })\n  } catch (error) {\n    logger.error(error)\n  }\n\n  handleState({ isLoading: false })\n}\n\nclass StateHandler extends React.Component {\n  state = {}\n\n  render () {\n    return this.props.children({\n      handleState: this.setState.bind(this),\n      state: this.state\n    })\n  }\n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n  , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}